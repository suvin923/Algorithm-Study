# DP (Dynamic Programming 동적 계획법) 사용해야함
n = int(input())

dp = [[0,0,0] for _ in range(n+1)]  #초기화 # N+1줄
dp[1][0] = 1 # 첫 번째 줄에 사자를 한 마리도 배치하지 않은 경우
dp[1][1] = 1 # 첫 번째 줄에 사자를 왼쪽에 배치
dp[1][2] = 1 # 첫 번째 줄에 사자를 오른쪽에 배치

# dp[i][j], i는 현재 줄 번호, j는 0일 때 사자 없음, 1일 때 사자 왼쪽, 2일 때 사자 오른쪽
for i in range(2, n + 1): # 2번째 ~ n번째 줄까지
	for j in range(3):
		if j == 0: # i번째줄에 동물을 배치 X
			dp[i][j] = (dp[i-1][j] + dp[i-1][j+1] + dp[i-1][j+2]) % 9901 # 이전 줄에서 동물을 배치하지 않은 경우 + 왼쪽에 배치한 경우 + 오른쪽 //
		elif j == 1: # i번째줄에 동물을 왼쪽에 배치
			dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]) % 9901 # 이전 줄에서 동물을 배치하지 않은 경우 + 오른쪽에 배치한 경우
		elif j == 2: # i번째줄에 동물을 오른쪽에 배치 
			dp[i][j] = (dp[i-1][j-1] + dp[i-1][j-2]) % 9901 # 이전 줄에서 동물을 배치하지 않은 경우 + 왼쪽에 배치한 경우

print(sum(dp[n]) % 9901) # 모든 경우의 수를 더하고 9901로 나누기
